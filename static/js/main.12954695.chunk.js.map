{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","svgContainerRef","React","createRef","drawRef","Math","floor","random","useEffect","canvas","SVG","addTo","size","viewbox","path","length","stroke","fill","interval","setInterval","color","circle","animate","during","pos","p","pointAt","radius","center","x","y","loop","setTimeout","clearInterval","className","id","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAoCeA,MA/Bf,WACE,IAAMC,EAAkBC,IAAMC,YACxBC,EAAUF,IAAMC,YAoBtB,OAnBeE,KAAKC,MAAsB,EAAhBD,KAAKE,UAE/BC,qBAAU,WACR,IAAIC,EAASC,cAAMC,MAAM,YAAYC,KAAK,OAAO,QAAQC,QAAQ,IAAI,EAAG,IAAK,KACzEC,EAAOL,EAAOK,KAAP,+xCACPC,EAASD,EAAKC,SAClBD,EAAKE,OAAO,WAAWC,KAAK,QAC5B,IAAIC,EAAWC,aAAY,WACzB,IAAIC,EAASf,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,GAAU,EAAI,MAAQ,UAC/Dc,EAASZ,EAAOY,OAAO,GAC3BA,EAAOC,QAAQ,IAAO,MAAMC,QAAO,SAASC,GAC1C,IAAIC,EAAIX,EAAKY,QAAQF,EAAMT,GAC3BM,EAAOJ,KAAK,QAAQD,OAAOI,GAC3BC,EAAOM,OAAO,IAAMH,GAAKR,OAAOI,GAChCC,EAAOO,OAAOH,EAAEI,EAAGJ,EAAEK,MACpBC,MAAK,GAAM,KACd,KACFC,YAAW,WAAOC,cAAcf,KAAY,OAC3C,IAED,qBAAKgB,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAMC,GAAG,UAAUC,IAAKnC,EAAvC,SACE,qBAAKiC,UAAU,MAAME,IAAKhC,SClBnBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.12954695.chunk.js","sourcesContent":["import React from \"react\";\nimport './App.css';\nimport {useEffect} from \"react\";\nimport {PointArray, SVG} from \"@svgdotjs/svg.js\";\n\nfunction App() {\n  const svgContainerRef = React.createRef();\n  const drawRef = React.createRef();\n  const rndInt = Math.floor(Math.random() * 6) + 1;\n\n  useEffect(() => {\n    let canvas = SVG().addTo(\"#drawing\").size(\"100%\",\"100%\").viewbox(350,0, 800, 800);\n    let path = canvas.path(`M715.2 330.1c.1.1 0 .1 0 .1-.1 0-.1-.1-.1-.1 0-.1.1-.1.1-.1.1 0 .2.1.2.2s-.1.2-.2.2-.2-.1-.2-.2c0-.2.1-.3.3-.3.2 0 .4.2.4.4s-.2.4-.4.4c-.3 0-.5-.2-.5-.5s.3-.6.6-.6c.4 0 .7.3.7.7 0 .5-.4.9-.9.9-.6 0-1.1-.5-1.1-1.1 0-.7.6-1.3 1.3-1.3.9 0 1.5.7 1.5 1.5 0 1-.8 1.8-1.8 1.8-1.2 0-2.2-1-2.2-2.2 0-1.5 1.2-2.7 2.7-2.7 1.8 0 3.2 1.4 3.2 3.2 0 2.1-1.7 3.8-3.8 3.8-2.5 0-4.6-2.1-4.6-4.6 0-3 2.5-5.5 5.5-5.5 3.7 0 6.6 3 6.6 6.6 0 4.4-3.6 7.9-7.9 7.9-5.3 0-9.5-4.3-9.5-9.5 0-6.3 5.1-11.4 11.4-11.4 7.6 0 13.7 6.1 13.7 13.7 0 9.1-7.4 16.5-16.5 16.5-10.9 0-19.8-8.8-19.8-19.8 0-13.1 10.6-23.7 23.7-23.7 15.7 0 28.5 12.7 28.5 28.5 0 18.9-15.3 34.1-34.1 34.1-22.6 0-41-18.3-41-41 0-27.2 22-49.2 49.2-49.2 32.6 0 59 26.4 59 59 0 39.1-31.7 70.8-70.8 70.8-46.9 0-85-38-85-85 0-56.3 45.6-102 102-102 67.6 0 122.4 54.8 122.4 122.4 0 81.1-65.7 146.8-146.8 146.8-97.3 0-176.2-78.9-176.2-176.2 0-116.8 94.7-211.4 211.4-211.4 140.1 0 253.7 113.6 253.7 253.7 0 168.1-136.3 304.5-304.5 304.5-201.8 0-365.3-163.6-365.3-365.3 0-242.1 196.3-438.4 438.4-438.4 290.6 0 526.1 235.5 526.1 526.1 0 348.7-282.6 631.3-631.3 631.3-418.6.1-757.8-339.1-757.8-757.5 0-502.1 407-909.1 909.1-909.1 602.5 0 1090.9 488.4 1090.9 1090.9M715.2 330.1s-.1 0 0 0c-.1 0 0 0 0 0zm0 0s0 .1 0 0v0zm0 0c-.1.1-.1 0 0 0v0zm0 0c-.1 0-.1-.1 0 0v0zm0 0c0-.1.1 0 0 0v0z`);\n    let length = path.length();\n    path.stroke(\"#969696\").fill(\"none\");\n    let interval = setInterval(() => {\n      let color = (Math.floor(Math.random() * 6) + 1 % 2) == 1 ? \"red\" : \"#76BC21\";\n      let circle = canvas.circle(1);\n      circle.animate(80000, '<>').during(function(pos){\n        let p = path.pointAt(pos * length);\n        circle.fill(\"#FFF\").stroke(color);\n        circle.radius(100 * pos).stroke(color);\n        circle.center(p.x, p.y);\n      }).loop(false,false)\n    },1000)\n    setTimeout(() => {clearInterval(interval)}, 60000)\n  }, []);\n  return (\n    <div className=\"App\">\n      <div className=\"SVG\" id=\"drawing\" ref={svgContainerRef}>\n        <div className=\"SVG\" ref={drawRef}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}